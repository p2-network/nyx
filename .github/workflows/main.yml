name: deploy-project

on:
  push:
    branches: [main]
  workflow_dispatch:

jobs:
  deploy:
    runs-on: ubuntu-latest
    environment: nyx
    if: github.event_name != 'pull_request'
    steps:
      - name: checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Tailscale
        uses: tailscale/github-action@v2
        with:
          oauth-client-id: ${{ secrets.TAILSCALE_CI_CLIENT_ID }}
          oauth-secret: ${{ secrets.TAILSCALE_CI_CLIENT_SECRET }}
          tags: tag:ci

      - name: starting SSH agent
        shell: bash
        run: |
            mkdir -p ~/.ssh
            eval $(ssh-agent)

      - name: Adding known host
        shell: bash
        run: |
          ssh-keyscan -p 22 "${{ vars.TARGET_HOSTNAME }}" >> ~/.ssh/known_hosts

      - name: Run playbook
        uses: dawidd6/action-ansible-playbook@v2
        with:
          # Required, playbook filepath
          playbook: main.yml
          # Optional, directory where playbooks live
          directory: ./ansible
          # Optional, ansible configuration file content (ansible.cfg)
          # configuration: |
          #   [defaults]
          #   callbacks_enabled = ansible.posix.profile_tasks, ansible.posix.timer
          #   stdout_callback = yaml
          #   nocows = false
          # Optional, SSH private key
          # key: ${{secrets.SSH_PRIVATE_KEY}}
          # Optional, literal inventory file contents
          # inventory: |
          #   [all]
          #   example.com
      
          #   [group1]
          #   example.com
          # Optional, SSH known hosts file content
          # known_hosts: |
          #   example.com ssh-ed25519 AAAAC3NzaC1lZDI1NTE5AAAAIOMqqnkVzrm0SdG6UOoqKLsabgH5C9okWi0dh2l9GKJl
          # # Optional, encrypted vault password
          # vault_password: ${{secrets.VAULT_PASSWORD}}
          # # Optional, galaxy requirements filepath
          # requirements: galaxy-requirements.yml
          # # Optional, additional flags to pass to ansible-playbook
          # options: |
          #   --inventory .hosts
          #   --limit group1
          #   --extra-vars hello=there
          #   --verbose
      # TODO: something like:
      # ssh patrick@nyx.tuatara-puffin.ts.net "if [ ! -d /opt/gitops/nyx ]; then mkdir /opt/gitops && git clone https://github.com/p2-network/nyx /opt/gitops/nyx; fi"
      # but... permissions.
      
      - name: Remote Deployment
        shell: bash
        run: |
          ssh ${{ vars.TARGET_USER }}@${{ vars.TARGET_HOSTNAME }} "cd /opt/gitops/nyx && git pull && ci/update.sh"
